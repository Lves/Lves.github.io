<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LvesLi&#39;s Blogging</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lves.github.io/"/>
  <updated>2016-05-25T01:20:11.000Z</updated>
  <id>http://lves.github.io/</id>
  
  <author>
    <name>LvesLi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swift学习笔记之A Swift Tour</title>
    <link href="http://lves.github.io/2016/05/25/A-Swift-Tour/"/>
    <id>http://lves.github.io/2016/05/25/A-Swift-Tour/</id>
    <published>2016-05-25T01:18:06.000Z</published>
    <updated>2016-05-25T01:20:11.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Swift1.0&lt;/code&gt;的时候一时兴起学习了一下&lt;code&gt;swift&lt;/code&gt;的基本语法，现在&lt;code&gt;Swift&lt;/code&gt;已经更新到 &lt;code&gt;2.1&lt;/code&gt;了,自己吧学到的也忘得差不多了，接下来重新复习一下。 &lt;/p&gt;
&lt;p&gt;今天先记录一下学习&lt;code&gt;swift初见&lt;/code&gt;相关知识点。&lt;br&gt;微信公众账号&lt;code&gt;lecoding&lt;/code&gt;同步更新&lt;/p&gt;
&lt;p&gt;###1. &lt;code&gt;if&lt;/code&gt; 条件语句 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//---------------------- 1.1  if 联系 ------------------------/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var optionalString: String?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if let name = optionalString &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    greeting=&amp;quot;Hello, \(name)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeting // Hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###1.2 使用 &lt;code&gt;??&lt;/code&gt; 取代默认值 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let wildcat=&amp;quot;lecoding&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;欢迎关注微信公众账号：\(optionalString ?? wildcat)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//打印结果：欢迎关注微信公众账号：&lt;code&gt;lecoding&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-3-switch&quot;&gt;&lt;a href=&quot;#1-3-switch&quot; class=&quot;headerlink&quot; title=&quot;1.3 switch&quot;&gt;&lt;/a&gt;1.3 switch&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 1. Switch 语句必须有Default选项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 2. 不用加 break, 找到第一个匹配的分支自动结&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let animal = &amp;quot;wildcat&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;switch  animal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case &amp;quot;dog&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;It&amp;apos;s a Dog!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case &amp;quot;cat&amp;quot;, &amp;quot;monkey&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;its cat or monkey&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case let x where x.hasPrefix(&amp;quot;wild&amp;quot;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;It&amp;apos;s wild&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case &amp;quot;wildcat&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;It is wildcat&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;I don&amp;apos;t know&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//打印结果：  It’s wild&lt;/p&gt;
&lt;h3 id=&quot;1-4-for-in&quot;&gt;&lt;a href=&quot;#1-4-for-in&quot; class=&quot;headerlink&quot; title=&quot;1.4 for-in&quot;&gt;&lt;/a&gt;1.4 for-in&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//1. 遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let numbersDictionary = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;first&amp;quot;: [12,23,1,23,34,43],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;second&amp;quot;: [2,23,123,4,43],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;third&amp;quot;: [82,-23,1,23,84,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var min=Int.max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (key, numberlist) in numbersDictionary &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for number in numberlist&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if number &amp;lt; min&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            min=number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\(min)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//打印结果： -23&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//2. `..&amp;lt;` 表示范围 , `..&amp;lt; `不包括上界， `...` 包括上界&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var count=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in 0..&amp;lt;4 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\(count)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//打印结果：4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in 0...4 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\(count)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//打印结果：5&lt;/p&gt;
&lt;p&gt;##2. 函数&lt;/p&gt;
&lt;h3 id=&quot;2-1-定义函数&quot;&gt;&lt;a href=&quot;#2-1-定义函数&quot; class=&quot;headerlink&quot; title=&quot;2.1 定义函数&quot;&gt;&lt;/a&gt;2.1 定义函数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func sayHello (name: String, words: String) -&amp;gt; String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;quot;\(name) say:\&amp;quot; \(words)\&amp;quot;。&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sayHello(&amp;quot;Lves&amp;quot;, words: &amp;quot;欢迎关注公众号：lecoding&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//打印结果： Lves say:” 欢迎关注公众号：lecoding”。&lt;/p&gt;
&lt;h3 id=&quot;2-2-函数返回多个值&quot;&gt;&lt;a href=&quot;#2-2-函数返回多个值&quot; class=&quot;headerlink&quot; title=&quot;2.2 函数返回多个值&quot;&gt;&lt;/a&gt;2.2 函数返回多个值&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func caculateStatistics(numbers: [Int]) -&amp;gt; (min: Int, max: Int, sum: Int)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var min = numbers[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var max = numbers[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var sum = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for num in numbers&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if num &amp;gt; max&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            max = num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else if num &amp;lt; min &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            min = num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum+=num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (min, max, sum)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let result = caculateStatistics([23,34,45,4562,-23,0])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(result.max)  //打印结果：4562&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(result.min)  //打印结果：-23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(result.2)  //打印结果：4641&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 在&lt;code&gt;swift&lt;/code&gt;中，函数支持嵌套，函数既可以当做另一个函数的&lt;code&gt;参数&lt;/code&gt;，也可以当做另一函数的&lt;code&gt;返回值&lt;/code&gt;；&lt;br&gt;函数也是一种&lt;code&gt;数据类型&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-3-函数嵌套&quot;&gt;&lt;a href=&quot;#2-3-函数嵌套&quot; class=&quot;headerlink&quot; title=&quot;2.3 函数嵌套&quot;&gt;&lt;/a&gt;2.3 函数嵌套&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func functionInFunc() -&amp;gt;Int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var num1 = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func add() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num1++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return num1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let result1 = functionInFunc()  // 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-4-函数作为返回值&quot;&gt;&lt;a href=&quot;#2-4-函数作为返回值&quot; class=&quot;headerlink&quot; title=&quot;2.4 函数作为返回值&quot;&gt;&lt;/a&gt;2.4 函数作为返回值&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func getSumFunction()-&amp;gt;((Int,Int)-&amp;gt;Int) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func getSum(num1: Int,num2: Int)-&amp;gt;Int&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return num1 + num2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return getSum  //返回函数名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var getSumFun=getSumFunction()  //获得求和函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let result2=getSumFun(10, 20)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result2   //30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-5-函数作为参数&quot;&gt;&lt;a href=&quot;#2-5-函数作为参数&quot; class=&quot;headerlink&quot; title=&quot;2.5 函数作为参数&quot;&gt;&lt;/a&gt;2.5 函数作为参数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//第三个参数是一个函数类型的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func compareFunc(num1: Int ,num2 : Int ,paramFunc:(Int,Int)-&amp;gt;Int)-&amp;gt;Int &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return paramFunc(num1,num2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//把求和函数传入进行求和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let compareResult=compareFunc(1, num2: 12, paramFunc: getSumFun)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// compareResult = 13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-闭包&quot;&gt;&lt;a href=&quot;#3-闭包&quot; class=&quot;headerlink&quot; title=&quot;3. 闭包&quot;&gt;&lt;/a&gt;3. 闭包&lt;/h2&gt;&lt;p&gt;函数是一种特殊的带有名字的&lt;code&gt;闭包&lt;/code&gt;。&lt;br&gt;匿名闭包使用&lt;code&gt;in&lt;/code&gt;把 &lt;code&gt;参数和返回值类型&lt;/code&gt; 与 &lt;code&gt;闭包体&lt;/code&gt; 分离。&lt;/p&gt;
&lt;h3 id=&quot;3-1-闭包定义&quot;&gt;&lt;a href=&quot;#3-1-闭包定义&quot; class=&quot;headerlink&quot; title=&quot;3.1 闭包定义&quot;&gt;&lt;/a&gt;3.1 闭包定义&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var numArray1 = [10, 21, 2, 0, 65, 26]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//对数组中的每个元素取反后返回，原数组不会变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let numArray2 = numArray1.map(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (number:Int) -&amp;gt; Int in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return -number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//注释：数组.map() 对当前数组运用闭包内的规则然后返回一个新的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(numArray1, numArray2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果： [10, 21, 2, 0, 65, 26] [-10, -21, -2, 0, -65, -26]&lt;/p&gt;
&lt;h3 id=&quot;3-2-闭包简写&quot;&gt;&lt;a href=&quot;#3-2-闭包简写&quot; class=&quot;headerlink&quot; title=&quot;3.2 闭包简写&quot;&gt;&lt;/a&gt;3.2 闭包简写&lt;/h3&gt;&lt;p&gt;如果一个闭包的类型已知，比如作为一个&lt;code&gt;回调函数&lt;/code&gt;，你可以忽略参数的&lt;code&gt;类型&lt;/code&gt;和&lt;code&gt;返回值&lt;/code&gt;。单个语句闭包会把它语句的值当做结果返回。&lt;br&gt;上边的闭包你也可以写成下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let numArray3 = numArray1.map(&amp;#123;number in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return -number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(numArray1, numArray3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果： [10, 21, 2, 0, 65, 26] [-10, -21, -2, 0, -65, -26]&lt;/p&gt;
&lt;p&gt;你可以通过 &lt;code&gt;参数位置&lt;/code&gt; 而不是参数名字来引用参数——这个方法在非常短的闭包中非常有用。&lt;br&gt;当一个闭包作为最后一个参数传给一个函数的时候，它可以直接跟在括号后面。当一个闭包是传给函数的唯一参数，你可以完全忽略括号。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//数组排序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let sortedNumbers = numArray1.sort &amp;#123; $0 &amp;gt; $1 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(sortedNumbers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果： [65, 26, 21, 10, 2, 0]&lt;/p&gt;
&lt;h2 id=&quot;4-对象和类&quot;&gt;&lt;a href=&quot;#4-对象和类&quot; class=&quot;headerlink&quot; title=&quot;4. 对象和类&quot;&gt;&lt;/a&gt;4. 对象和类&lt;/h2&gt;&lt;p&gt;####1.定义Person类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Person &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // MARK: - Properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ///姓名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ///年龄&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var age:Int?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let hasParants:Bool = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // MARK: - Lifecycle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //构造函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // MARK: - Private&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func sayHello() -&amp;gt;String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;Hello, My Name is \(name),欢迎关注微信公众账号：lecoding。iOS开发文章实时更新！&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var per1 = Person(name: &amp;quot;Lves&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;per1.age=24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sayHi = per1.sayHello()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;quot;Hello, My Name is Lves,欢迎关注微信公众账号：lecoding。iOS开发文章实时更新！&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####2. 定义Person的子类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Student: Person &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var className: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String, className: String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.className=className&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func sayHello() -&amp;gt; String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;I am a Student From class \(className)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var stu = Student(name: &amp;quot;Lves&amp;quot;, className: &amp;quot;一年级&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stu.age        //20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stu.sayHello() //&amp;quot;I am a Student From class 一年级&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Square &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var width : Float = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var perimeter: Float&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return 4*width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width = newValue/4.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;5-枚举和结构体&quot;&gt;&lt;a href=&quot;#5-枚举和结构体&quot; class=&quot;headerlink&quot; title=&quot;5. 枚举和结构体&quot;&gt;&lt;/a&gt;5. 枚举和结构体&lt;/h2&gt;&lt;p&gt;###5.1 枚举&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//1. 在swift中枚举可以包含方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enum WeekType &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Mon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Tue, Wed, Thu, Fri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Sat, Sun&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func myDescription () -&amp;gt; String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch self &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Mon:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Monday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Tue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Tuesday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Wed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Wednesday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Thu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Thursday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Fri:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Friday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Sat:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Saturday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case .Sun:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &amp;quot;Sunday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let weekday = WeekType.Thu              // Thu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let desc = weekday.myDescription()      // &amp;quot;Tuesday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//枚举定义了类型之后，可以使用 .rawValue 查看原值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enum FromControllerType: String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case First = &amp;quot;FirstController&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Second = &amp;quot;SecondController&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let from = FromControllerType.First     // First&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(from.rawValue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//打印结果：&amp;quot;FirstController&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###5.2. 结构体&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;struct&lt;/code&gt;来创建一个结构体。结构体和类有很多相同的地方，比如方法和构造器。它们之间最大的一个区别就是结构体是&lt;code&gt;传值&lt;/code&gt;，类是&lt;code&gt;传引用&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct Week &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weekday : WeekType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func myDescription() -&amp;gt;String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;My Weekday is \(weekday.myDescription())&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let structVar = Week(weekday: .Fri)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;structVar.myDescription()     // &amp;quot;My Weekday is Friday&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-协议和扩展&quot;&gt;&lt;a href=&quot;#6-协议和扩展&quot; class=&quot;headerlink&quot; title=&quot;6. 协议和扩展&quot;&gt;&lt;/a&gt;6. 协议和扩展&lt;/h2&gt;&lt;p&gt;###6.1. 协议&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protocol DescriptionProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var simpleDescrition: String &amp;#123; get &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func adjust()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类、枚举、结构体都可以实现协议&lt;br&gt;类实现协议&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class DescripClass: DescriptionProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var simpleDescrition:String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;I&amp;apos;m a Class&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func adjust() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结构体实现协议&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意:&lt;/code&gt;声明SimpleStructure时候mutating关键字用来标记一个会修改结构体的方法。SimpleClass的声明不需要标记任何方法，因为类中的方法通常可以修改类属性（类的性质）。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct DescripStruct: DescriptionProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var simpleDescrition: String = &amp;quot;I&amp;apos;m a Struct&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func adjust() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        simpleDescrition += &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var structConformProtocal = DescripStruct()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;structConformProtocal.adjust()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;structConformProtocal.simpleDescrition // &amp;quot;I&amp;apos;m a Struct123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;枚举实现协议&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enum DescripEnum: DescriptionProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Success, Error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var simpleDescrition: String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            switch self &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case .Success:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return &amp;quot;You are Success&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            case .Error:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return &amp;quot;You are Failure&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func adjust() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var enumConformProtocal = DescripEnum.Success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enumConformProtocal.simpleDescrition  //&amp;quot;You are Success&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol AbsoluteProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func absolute() -&amp;gt; Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###6.2 扩展&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;extension&lt;/code&gt;来为现有的类型添加功能，比如新的方法和计算属性。你可以使用扩展在别处修改定义，甚至是从外部库或者框架引入的一个类型，使得这个类型遵循某个协议。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//拓展 Double 类型同时实现 DescriptionProtocal、AbsoluteProtocal 两个协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;extension Double:DescriptionProtocal,AbsoluteProtocal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var test:String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;demo&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var simpleDescrition:String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;The double value is: \(self)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func adjust() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self = -self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func absolute() -&amp;gt;Double &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return abs(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var doubleNumber:Double = 12.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doubleNumber.simpleDescrition       //&amp;quot;The double value is: 12.5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doubleNumber.adjust()               // -12.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var oriNumber:Double = -100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var resultDouble=oriNumber.absolute()  //取反&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;resultDouble                // 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oriNumber.test              // &amp;quot;demo&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##7. 泛型 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enum optionalValue&amp;lt;Type&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case other(Type)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var enumOfInt:optionalValue&amp;lt;Int&amp;gt; = .none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enumOfInt = .other(12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(enumOfInt)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果：other(12)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func anyCommonElements &amp;lt;T: SequenceType, U: SequenceType where T.Generator.Element: Equatable, T.Generator.Element == U.Generator.Element&amp;gt; (lhs: T, _ rhs: U) -&amp;gt; Bool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for lhsItem in lhs &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for rhsItem in rhs &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if lhsItem == rhsItem &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;anyCommonElements([1, 2, 3], [3])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;微信公众账号同步更新：&lt;code&gt;lecoding&lt;/code&gt;,你也可以扫描下方二维码和我一起学习Swift：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/icon.jpg&quot; alt=&quot;icon&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Swift1.0&lt;/code&gt;的时候一时兴起学习了一下&lt;code&gt;swift&lt;/code&gt;的基本语法，现在&lt;code&gt;Swift&lt;/code&gt;已经更新到 &lt;code&gt;2.1&lt;/code&gt;了,自己吧学到的也忘得差不多了，接下来重新复习一下。 &lt;/p&gt;
&lt;p&gt;今天先
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Objective-C 预处理器(The Preprocessor)</title>
    <link href="http://lves.github.io/2016/05/24/Objective-C-The-Preprocessor/"/>
    <id>http://lves.github.io/2016/05/24/Objective-C-The-Preprocessor/</id>
    <published>2016-05-24T01:38:28.000Z</published>
    <updated>2016-05-24T10:45:41.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Objective-C&lt;/code&gt;源文件在编译之前要先经过预编译器处理，然后再扔给&lt;code&gt;LLVM&lt;/code&gt;处理、优化。&lt;code&gt;Objectice-C&lt;/code&gt;编译器从源文件的输入到编译后的输出文件,处理过程分解后如下图：&lt;br&gt;&lt;img src=&quot;/img/20160524/101.png&quot; alt=&quot;123.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示编译过程大体包括词法分析、语法分析、生成代码和优化、汇编链接，最后输出可执行的二进制文件。关于其中每个阶段的具体行为，我们就不做具体研究了，已经超出了我的能力范围（恨自己当年大学期间编译原理没有好好学啊），如果你感兴趣可以研究一下“龙书”《Compilers: Principles, Techniques, and Tools》，传说&lt;code&gt;LLVM&lt;/code&gt;的作者&lt;code&gt;Chris Lattner&lt;/code&gt; 曾经修炼了这本武功秘籍，还未毕业就被Apple盯上了。&lt;code&gt;龙书&lt;/code&gt;真容如下（快膜拜）：&lt;br&gt;&lt;img src=&quot;/img/20160524/102.png&quot; alt=&quot;234.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天我们主要看看和预处理器（词法分析部分）相关的内容。预处理器处理过程主要包括三个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文本翻译： 将输入的源文件分成代码行，并进行一些翻译处理。&lt;/li&gt;
&lt;li&gt;记号转换： 将上一步的处理结果转换成记号语言。&lt;/li&gt;
&lt;li&gt;基于预处理语言的转换： 如果上一步结果中含有预处理语言元素，就会进行转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前两部是自动处理的，第三部要根据预处理语言函数进行处理，&lt;/p&gt;
&lt;p&gt;##预处理语言&lt;/p&gt;
&lt;p&gt;预处理语言对源文件进行转换主要包括文件引用、条件编译、宏展开。预处理语言定义了预处理指令和宏定义。预处理指令是预处理器执行的命令和编译器无关，宏定义只是一个具有名称的一段代码，在文件中会被预处理器替换成相应代码。&lt;/p&gt;
&lt;p&gt;###指令&lt;br&gt;指令的格式: &lt;code&gt;#指令名 指令参数&lt;/code&gt; 例如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#import &amp;quot;Student.h&amp;quot;
#define kBackColor  [UIColor redColor]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;指令主要包括以下四种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;头文件引用&lt;/li&gt;
&lt;li&gt;条件编译&lt;/li&gt;
&lt;li&gt;错误诊断&lt;/li&gt;
&lt;li&gt;Pragma&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#####头文件引用&lt;/p&gt;
&lt;p&gt;头文件引用主要由&lt;code&gt;#inlude&lt;/code&gt; 和&lt;code&gt;#import&lt;/code&gt; 两种。每种又分为尖括号(&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;)引用和双引号(&lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;)引用 。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;#inlude&lt;/code&gt;  与 &lt;code&gt;#import&lt;/code&gt; 的区别是： &lt;code&gt;#import&lt;/code&gt; 不会造成重复引用，它会自己检查是否已经引用过，也可以防止递归包含。&lt;/li&gt;
&lt;li&gt;尖括号(&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;)引用与双引号(&lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;)引用的区别是&lt;ul&gt;
&lt;li&gt;双引号(&lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;)引用的文件，编译器会首先在存储源文件的同一目录下搜索，如果文件没有找到编译器会搜索默认目录（配置文件中配置的头文件引用目录）。&lt;/li&gt;
&lt;li&gt;尖括号(&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;)引用 只会在默认目录下搜索。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#####条件编译&lt;br&gt;条件编译指令主要包括 (#if, #elif, #else, #endif, #ifdef, #ifndef) 利用他们可以选择性的编译代码。一个&lt;code&gt;#if&lt;/code&gt;或者&lt;code&gt;#ifdef&lt;/code&gt; 最后一定以&lt;code&gt;#endif&lt;/code&gt;结束,中间写条件处理或者插入else指令。例如：&lt;/p&gt;
&lt;p&gt;   #ifdef, #ifndef&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifdef DEBUG
       NSLog (@&amp;quot;File search complete. Found %i files&amp;quot;, filecount&amp;quot;);
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   #if, #elif, #else, #endif&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#if constant_expression

#else

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#if constant_expression

#elif constant_expression

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;#####诊断指令&lt;br&gt;诊断指令主要包括 &lt;code&gt;#error&lt;/code&gt; 和&lt;code&gt;#warning&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifndef    ifOpen
#error &amp;quot;Not Open&amp;quot;
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果进入到&lt;code&gt;#error&lt;/code&gt;指令，则编译器不会往下执行，如果编译到&lt;code&gt;#warning&lt;/code&gt;指令，只会显示一个警告信息，还会继续编译。&lt;/p&gt;
&lt;p&gt;#####Pragma指令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pragma&lt;/code&gt; 指令之一种编译器指令，它可以在特定平台下使用，像&lt;code&gt;mark&lt;/code&gt;指令可以对代码进行分段标记，让代码更容易查找和跳转到指定位置。 我在自己的Controller中经常这样&lt;code&gt;mark&lt;/code&gt;如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#pragma mark -
#pragma mark Life Cycle

#pragma mark -
#pragma mark Private Method

#pragma mark -
#pragma mark Action

#pragma mark -
#pragma mark Setter&amp;amp;Getter
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;###宏定义&lt;/p&gt;
&lt;p&gt;宏定义就是对代码段起个名字，编译器编译之前预处理器会进行简单的字符串替换。宏定义可以进行简单的替换：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#define MY_CONSTANT 4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以定义一个带参数的代码段 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#define SQUARE(x)  ((x) * (x))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因为宏定义默认只支持一样，如果要定义多行时每行结尾要加一个斜线（&lt;code&gt;\&lt;/code&gt;），最后一行不用。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#define SWAP(a, b) \
a^=b;\
b^=a;\
a^=b;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;宏定义&lt;code&gt;枚举&lt;/code&gt;和&lt;code&gt;Block&lt;/code&gt;在`OC中经常使用。宏定义会在编译之前进行处理，而且一旦定义在其作用范围内都可以引用，可以提高编程效率。宏定义功能强大，当然宏定义也不能乱用它也存在确定，比如难以维护和查错。真机测试时定义太多的宏，当修改一个值就会重新编译好久。建议经常修改的值不要使用宏。一些宏能用常量替换的尽量使用常量。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://www.lvesli.com/?p=386&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lvesli.com/?p=386&lt;/a&gt;    微信公众账号同步更新：&lt;code&gt;lecoding&lt;/code&gt;&lt;br&gt;下面列出我自己项目中经常使用的宏定义：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//1. 打印日志
#ifdef DEBUG
#    define DLog(...) NSLog(__VA_ARGS__)
#else
#    define DLog(...)
#endif

//2. 获取屏幕 宽度、高度
#define kScreenWidth ([UIScreen mainScreen].bounds.size.width)
#define kScreenHeight ([UIScreen mainScreen].bounds.size.height)

//3. 颜色
#define RGB(r, g, b, a)  [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]
#define HEXCOLOR(c)       [UIColor colorWithRed:((c&amp;gt;&amp;gt;16)&amp;amp;0xFF)/255.0f green:((c&amp;gt;&amp;gt;8)&amp;amp;0xFF)/255.0f blue:(c&amp;amp;0xFF)/255.0f alpha:1.0f]
//背景色  
#define BACKGROUND_COLOR [UIColor colorWithRed:242.0/255.0 green:236.0/255.0 blue:231.0/255.0 alpha:1.0]  
//清除背景色  
#define CLEARCOLOR [UIColor clearColor] 

//4.加载图片宏：
#define LOADIMAGE(file,type) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:file ofType:type]]
//5. NavBar高度
#define NavigationBar_HEIGHT 44
//6. 获取系统版本
#define IOS_VERSION [[[UIDevice currentDevice] systemVersion] floatValue]
#define CurrentSystemVersion [[UIDevice currentDevice] systemVersion]

//7. 判断是真机还是模拟器
#if TARGET_OS_IPHONE
    //iPhone Device
#endif

#if TARGET_IPHONE_SIMULATOR
   //iPhone Simulator
#endif

//8. 设置View的tag属性
#define VIEWWITHTAG(_OBJECT, _TAG)    [_OBJECT viewWithTag : _TAG]

//9. GCD
#define BACK(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)
#define MAIN(block) dispatch_async(dispatch_get_main_queue(),block)

//10. NSUserDefaults 实例化
#define USER_DEFAULT [NSUserDefaults standardUserDefaults]
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;本博客也会在 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 微信公众号中同步更新，欢迎大家订阅，有什么问题可以在此一起交流。公众号搜索：&lt;strong&gt;&lt;em&gt; 乐Coding &lt;/em&gt;&lt;/strong&gt; 或者 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 或者微信扫描下方二维码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/icon.jpg&quot; alt=&quot;icon&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Objective-C&lt;/code&gt;源文件在编译之前要先经过预编译器处理，然后再扔给&lt;code&gt;LLVM&lt;/code&gt;处理、优化。&lt;code&gt;Objectice-C&lt;/code&gt;编译器从源文件的输入到编译后的输出文件,处理过程分解后如下图：&lt;br&gt;&lt;img sr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS9 Storyboard新特性之 Storyboard References</title>
    <link href="http://lves.github.io/2016/05/24/iOS9-Storyboard%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BStoryboard-References/"/>
    <id>http://lves.github.io/2016/05/24/iOS9-Storyboard新特性之Storyboard-References/</id>
    <published>2016-05-24T01:25:35.000Z</published>
    <updated>2016-05-24T10:44:39.000Z</updated>
    
    <content type="html">&lt;p&gt;今天有空看了下iOS9 Storyboard的新特性，Xcode7给storyboard带来了以下特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分解一个单一的storyboard成多个storyboard,并通过 storyboard references  连接他们。&lt;/li&gt;
&lt;li&gt;通过 scene dock  给ViewController附加view。&lt;/li&gt;
&lt;li&gt;在storyboard上给 navigation bar添加多个button .&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;初始项目，在 &lt;code&gt;Main.storyboard&lt;/code&gt;中有一个 &lt;code&gt;TabBarViewController&lt;/code&gt;,它包含两个&lt;code&gt;HomeViewController&lt;/code&gt;和&lt;code&gt;UserViewController&lt;/code&gt;。&lt;br&gt;&lt;code&gt;HomeViewController&lt;/code&gt;是一个tableviewcontroller,点击cell进入&lt;code&gt;DetailViewController&lt;/code&gt;。UserViewcontroller是一个简单的ViewController。&lt;br&gt;Main.storyboard和项目目录如下图：&lt;br&gt;&lt;img src=&quot;/img/20160524/001.png&quot; alt=&quot;1.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/20160524/002.png&quot; alt=&quot;2.png&quot;&gt;&lt;br&gt;  项目中还有一个未使用的DiscoverStoryboard.storyboard ，在这个storyboard中只有一个简单的Controller，稍后我们会用到。&lt;br&gt;&lt;img src=&quot;/img/20160524/003.png&quot; alt=&quot;3.png&quot;&gt;&lt;br&gt;运行项目效果如下：&lt;br&gt;&lt;img src=&quot;/img/20160524/004.png&quot; alt=&quot;4.png&quot;&gt;&lt;br&gt;今天我们先看一下它的第一个特性，&lt;code&gt;storyboard&lt;/code&gt;的分解和引用 （&lt;code&gt;storyboard references&lt;/code&gt;）。&lt;br&gt;用&lt;code&gt;storyboard&lt;/code&gt;做过开发的猿都知道，&lt;code&gt;storyboard&lt;/code&gt;会慢慢的变得越来越臃肿；&lt;br&gt;还有一个”致命“的弱点就是使用&lt;code&gt;Git&lt;/code&gt;进行多人开发的时候经常造成冲突，让我们猿们无法忍受只想摔键盘啊！&lt;br&gt;即使我们可以使用多个&lt;code&gt;storyboard&lt;/code&gt;来解决但也无法实现使用&lt;code&gt;segue&lt;/code&gt;从一个&lt;code&gt;storyboard&lt;/code&gt;中的&lt;code&gt;viewcontroller&lt;/code&gt; push到另一个&lt;code&gt;storyboard&lt;/code&gt;中的&lt;code&gt;controller&lt;/code&gt;。&lt;br&gt;在Xcode7中这些问题通过&lt;code&gt;storyboard references&lt;/code&gt;都得到了很好的解决 。&lt;/p&gt;
&lt;p&gt;###一、创建一个Storyboard引用&lt;/p&gt;
&lt;p&gt;打开Main.stroyboard选中HomeController对应的三个controller如下图，然后点击菜单栏【Editor】选项中的【Refactor to storyboard…】按钮&lt;br&gt; &lt;img src=&quot;/img/20160524/005.png&quot; alt=&quot;5.png&quot;&gt;&lt;br&gt; &lt;img src=&quot;/img/20160524/006.png&quot; alt=&quot;6.png&quot;&gt;&lt;br&gt;在弹出框中给新的storyboard起个新的名字Home.storyboard：&lt;br&gt;&lt;img src=&quot;/img/20160524/007.png&quot; alt=&quot;7.png&quot;&gt;&lt;br&gt;保存后，你会发现目录中多了一个Home.storybaord。打开原来的Main.storyboard你会发现原理的Homecontroller变成了一个storyboard references。选中这个storyboard references  在右侧Attributes Inspector中显示如下图：&lt;br&gt;&lt;img src=&quot;/img/20160524/008.png&quot; alt=&quot;8.png&quot;&gt;&lt;br&gt;打开原来的的&lt;code&gt;Main.storyboard&lt;/code&gt;如下图，到此分解单个&lt;code&gt;storyboard&lt;/code&gt;称多个&lt;code&gt;storyboard&lt;/code&gt;就完成了，就这么简单。&lt;br&gt;&lt;img src=&quot;/img/20160524/009.png&quot; alt=&quot;9.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;###二、在团队开发中使用Storyboard&lt;br&gt;&lt;code&gt;storyboard references&lt;/code&gt; 还有另外一种使用情况，当我们开发多个功能模块时可能会出现，不同的人在自己的storyboard中开发然后通过storyboard references  把不同的功能模块连接起来。在上边说过我们有一个DiscoverStoryboard.storyboard 还没有用到，如何快速的把第三个功能模块合进来？&lt;br&gt;首先打开&lt;code&gt;Main.storyboard&lt;/code&gt;从 &lt;code&gt;Object Library&lt;/code&gt;中托出一个&lt;code&gt;storyboard references&lt;/code&gt; 到&lt;code&gt;User Interface&lt;/code&gt;中，&lt;br&gt;&lt;img src=&quot;/img/20160524/010.png&quot; alt=&quot;10.png&quot;&gt;&lt;br&gt;然后按住键盘&lt;code&gt;control&lt;/code&gt;键，点击鼠标左键从&lt;code&gt;TabBarController&lt;/code&gt;拖拽到 &lt;code&gt;storyboard reference&lt;/code&gt;，在弹出框中选择 &lt;code&gt;view controllers&lt;/code&gt;如下图：&lt;br&gt;&lt;img src=&quot;/img/20160524/011.png&quot; alt=&quot;11.png&quot;&gt;&lt;br&gt;选中 &lt;code&gt;storyboard reference&lt;/code&gt; 打开右侧&lt;code&gt;Attributes Inspector&lt;/code&gt; 设置&lt;code&gt;storyboard&lt;/code&gt; 为 &lt;code&gt;DiscoverStoryboard.storyboard&lt;/code&gt; 。好了到此添加一个已存在的storyboard成功。&lt;br&gt;&lt;img src=&quot;/img/20160524/012.png&quot; alt=&quot;12.png&quot;&gt;&lt;br&gt;运行项目如下图所示：&lt;br&gt;&lt;img src=&quot;/img/20160524/013.png&quot; alt=&quot;13.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; 原文链接：&lt;a href=&quot;http://lvesli.com/2016/05/24/iOS9-Storyboard%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BStoryboard-References/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lvesli.com&lt;/a&gt; &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本博客也会在 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 微信公众号中同步更新，欢迎大家订阅，有什么问题可以在此一起交流。公众号搜索：&lt;strong&gt;&lt;em&gt; 乐Coding &lt;/em&gt;&lt;/strong&gt; 或者 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 或者微信扫描下方二维码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/icon.jpg&quot; alt=&quot;/img/icon.jpg&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天有空看了下iOS9 Storyboard的新特性，Xcode7给storyboard带来了以下特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分解一个单一的storyboard成多个storyboard,并通过 storyboard references  连接他们。&lt;/li&gt;
&lt;l
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OS X 10.11 安装Cocoapods失败：Operation not permitted</title>
    <link href="http://lves.github.io/2016/05/23/OS-X-10-11-%E5%AE%89%E8%A3%85Cocoapods%E5%A4%B1%E8%B4%A5%EF%BC%9AOperation-not-permitted/"/>
    <id>http://lves.github.io/2016/05/23/OS-X-10-11-安装Cocoapods失败：Operation-not-permitted/</id>
    <published>2016-05-23T11:02:07.000Z</published>
    <updated>2016-05-24T10:46:08.000Z</updated>
    
    <content type="html">&lt;p&gt;   系统升级到 &lt;strong&gt;&lt;em&gt; OS X 10.11 &lt;/em&gt;&lt;/strong&gt;  (EI Capitan)的时候，当安装 &lt;strong&gt; CocoaPods &lt;/strong&gt; 的时候提示如下的错误：&lt;strong&gt;&lt;em&gt; Operation not permitted &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;一共有两种解决方案：&quot;&gt;&lt;a href=&quot;#一共有两种解决方案：&quot; class=&quot;headerlink&quot; title=&quot;一共有两种解决方案：&quot;&gt;&lt;/a&gt;一共有两种解决方案：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;1.官方解决方案；&lt;/p&gt;
&lt;p&gt;2.github解决方案，安装在其他目录（我采用的方案）；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;1-官方给出的解决方式是：自定义-GEM-HOME&quot;&gt;&lt;a href=&quot;#1-官方给出的解决方式是：自定义-GEM-HOME&quot; class=&quot;headerlink&quot; title=&quot;1.官方给出的解决方式是：自定义 GEM_HOME&quot;&gt;&lt;/a&gt;1.官方给出的解决方式是：自定义 GEM_HOME&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;$ mkdir -p $HOME/Software/ruby
$ export GEM_HOME=$HOME/Software/ruby
$ gem install cocoapods
[...]
1 gem installed
$ export PATH=$PATH:$HOME/Software/ruby/bin
$ pod --version
0.37.2  
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;Github-解决方案&quot;&gt;&lt;a href=&quot;#Github-解决方案&quot; class=&quot;headerlink&quot; title=&quot;Github 解决方案&quot;&gt;&lt;/a&gt;Github 解决方案&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;$ sudo gem install -n /usr/local/bin cocoapods
$ pod setup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;建议开通VPN安装会快点，如果你没有vpn也可以参照一下&lt;strong&gt;&lt;em&gt; 唐巧 &lt;/em&gt;&lt;/strong&gt;的一篇博客：&lt;a href=&quot;http://blog.devtang.com/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; 原文链接：&lt;a href=&quot;http://lvesli.com/2016/05/23/OS-X-10-11-%E5%AE%89%E8%A3%85Cocoapods%E5%A4%B1%E8%B4%A5%EF%BC%9AOperation-not-permitted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lvesli.com&lt;/a&gt; &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本博客也会在 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 微信公众号中同步更新，欢迎大家订阅，有什么问题可以在此一起交流。公众号搜索：&lt;strong&gt;&lt;em&gt; 乐Coding &lt;/em&gt;&lt;/strong&gt; 或者 &lt;strong&gt;&lt;em&gt; lecoding &lt;/em&gt;&lt;/strong&gt; 或者微信扫描下方二维码：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/img/icon.jpg&quot; alt=&quot;https://github.com/Lves/lves.github.io/blob/master/images/icon.jpg?raw=true&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;   系统升级到 &lt;strong&gt;&lt;em&gt; OS X 10.11 &lt;/em&gt;&lt;/strong&gt;  (EI Capitan)的时候，当安装 &lt;strong&gt; CocoaPods &lt;/strong&gt; 的时候提示如下的错误：&lt;strong&gt;&lt;em&gt; Operation not p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lves.github.io/2016/05/20/hello-world/"/>
    <id>http://lves.github.io/2016/05/20/hello-world/</id>
    <published>2016-05-20T11:39:41.000Z</published>
    <updated>2016-05-24T10:37:41.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/icon.jpg&quot; alt=&quot;icon&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
